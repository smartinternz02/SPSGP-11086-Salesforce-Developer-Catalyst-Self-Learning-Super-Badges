@isTest
private with sharing class MaintenanceRequestHelperTest {
    private static Vehicle__c createVehicle(){
        Vehicle__c v = new Vehicle__C(name = 'Testing Vehicle');
        return v;
    } 
    private static Product2 createEquipment(){
        product2 e = new product2(name = 'Testing equipment',lifespan_months__c = 10,maintenance_cycle__c = 10,replacement_part__c = true);
        return e;
    }
    private static Case createMaintenanceRequest(id vehicleId, id equipmentId){
        case c = new case(Type='Repair',Status='New',Origin='Web',Subject='Testing subject',Equipment__c=equipmentId,Vehicle__c=vehicleId);
        return c;
    }
    private static Equipment_Maintenance_Item__c createEquipmentMaintenanceItem(id equipmentId,id requestId){
        Equipment_Maintenance_Item__c eMI = new Equipment_Maintenance_Item__c(Equipment__c = equipmentId,Maintenance_Request__c = requestId);
        return eMI;
    }
    // Success
    @isTest
    private static void pTest(){
        Vehicle__c v = createVehicle();
        insert v;
        id vId = v.Id;
        Product2 e = createEquipment();
        insert e;
        id eId = e.Id;
        case createdCase = createMaintenanceRequest(vId,eId);
        insert createdCase;
        Equipment_Maintenance_Item__c equipmentMaintenanceItem = createEquipmentMaintenanceItem(eId,createdCase.id);
        insert equipmentMaintenanceItem;
        //test
        test.startTest();
        createdCase.status = 'Closed';
        update createdCase;
        test.stopTest();
        //test end
        Case newCase = [Select id, subject, type,Equipment__c,Date_Reported__c,Vehicle__c,Date_Due__c from case where status ='New'];
        Equipment_Maintenance_Item__c workPart = [select id from Equipment_Maintenance_Item__c where Maintenance_Request__c =:newCase.Id];
        list<case> allCase = [select id from case];
        system.assertEquals(newCase.Type, 'Routine Maintenance');
        SYSTEM.assertEquals(newCase.Equipment__c, eId);
        SYSTEM.assertEquals(newCase.Vehicle__c, vId);
    }
    //Fail
    @isTest
    private static void nTest(){
        Vehicle__C v = createVehicle();
        insert v;
        id vId = v.Id;
        product2 e = createEquipment();
        insert e;
        id eId = e.Id;
        case createdCase = createMaintenanceRequest(vId,eId);
        insert createdCase;
        Equipment_Maintenance_Item__c workP = createEquipmentMaintenanceItem(eId, createdCase.Id);
        insert workP;
        //test
        test.startTest();
        createdCase.Status = 'Working';
        update createdCase;
        test.stopTest();
        //test end
        list<case> allCase = [select id from case];
        Equipment_Maintenance_Item__c equipmentMaintenanceItem = [select id from Equipment_Maintenance_Item__c where Maintenance_Request__c = :createdCase.Id];
        system.assert(allCase.size() == 1);
    }
    //Bulk
    @isTest
    private static void bTest(){
        list<Vehicle__C> vList = new list<Vehicle__C>();
        list<Product2> eList = new list<Product2>();
        list<Equipment_Maintenance_Item__c> eMIList = new list<Equipment_Maintenance_Item__c>();
        list<case> caseList = new list<case>();
        list<id> oldCaseIds = new list<id>();
        for(integer i = 0; i < 300; i++){
            vList.add(createVehicle());
            eList.add(createEquipment());
        }
        insert vList;
        insert eList;
        for(integer i = 0; i < 300; i++){
            caseList.add(createMaintenanceRequest(vList.get(i).id, eList.get(i).id));
        }
        insert caseList;
        for(integer i = 0; i < 300; i++){
            eMIList.add(createEquipmentMaintenanceItem(eList.get(i).id, caseList.get(i).id));
        }
        insert eMIList;
        //test
        test.startTest();
        for(case cs : caseList){
            cs.Status = 'Closed';
            oldCaseIds.add(cs.Id);
        }
        update caseList;
        test.stopTest();
        //test end
        list<case> newCase = [select id from case where status ='New'];
        list<Equipment_Maintenance_Item__c> workParts = [select id from Equipment_Maintenance_Item__c where Maintenance_Request__c in: oldCaseIds];
        system.assert(newCase.size() == 300);
        list<case> allCase = [select id from case];
        system.assert(allCase.size() == 600);
    }
}
